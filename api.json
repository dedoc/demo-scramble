{
    "openapi": "3.1.0",
    "info": {
        "title": "Bookly",
        "version": "0.0.1",
        "description": "## About Bookly \n\nBookly is a simple booking system. It allows users to book a cozy place for a date and time.\n\nThis is a demo project for [Scramble](https:\/\/scramble.dedoc.co).\n\n### Contact\n\nIf you discover some issues, or have ideas, or have any questions, or just want to say hello, please send an e-mail to Roman via roman@dedoc.com.\n"
    },
    "servers": [
        {
            "url": "http:\/\/localhost\/api"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "\/bookings": {
            "get": {
                "operationId": "bookings.index",
                "description": "List all bookings of the user. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/BookingsController.php#L18)",
                "summary": "List bookings",
                "tags": [
                    "Bookings"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `BookingResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/BookingResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "bookings.store",
                "description": "Create a booking for the given place at the given date. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/BookingsController.php#L28)",
                "summary": "Create booking",
                "tags": [
                    "Bookings"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "place_id": {
                                        "type": "integer"
                                    },
                                    "date": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "place_id",
                                    "date"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The created booking.\n\n\n\n`BookingResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BookingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Place is not available at the given date"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/bookings\/{booking}": {
            "get": {
                "operationId": "bookings.show",
                "description": "Show the given booking. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/BookingsController.php#L78)",
                "summary": "Show booking",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "description": "The booking ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`BookingResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BookingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "bookings.update",
                "description": "Update the date of the given booking. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/BookingsController.php#L58)",
                "summary": "Update booking",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "description": "The booking ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "date"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`BookingResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BookingResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Place is not available at the given date"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "bookings.destroy",
                "description": "Delete the given booking. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/BookingsController.php#L88)",
                "summary": "Delete booking",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "description": "The booking ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/places": {
            "get": {
                "operationId": "places",
                "description": "List all places that can be booked by the user. The user can filter the list by price range and sort the results. [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Controllers\/Api\/PlacesController.php#L22)",
                "summary": "List places",
                "tags": [
                    "Places"
                ],
                "parameters": [
                    {
                        "name": "price_from",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price_to",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "sorts",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "enum": [
                                            "price"
                                        ]
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "asc",
                                            "desc"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `PlaceResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PlaceResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": ""
            }
        },
        "schemas": {
            "BookingResource": {
                "type": "object",
                "description": " [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Resources\/BookingResource.php)",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "place_id": {
                        "type": "integer",
                        "description": "The place where the booking is made."
                    },
                    "user_id": {
                        "type": "integer",
                        "description": "The ID of the user who made the booking."
                    },
                    "date": {
                        "type": "string",
                        "description": "The date of the booking."
                    }
                },
                "required": [
                    "id",
                    "place_id",
                    "user_id",
                    "date"
                ],
                "title": "BookingResource"
            },
            "PlaceResource": {
                "type": "object",
                "description": " [Open on GitHub](https:\/\/github.com\/dedoc\/demo-scramble\/tree\/main\/app\/Http\/Resources\/PlaceResource.php)",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the place."
                    },
                    "price": {
                        "type": "integer",
                        "description": "The price of the place."
                    }
                },
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "title": "PlaceResource"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}